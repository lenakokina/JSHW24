const TODOS_URL="https://5dd3d5ba8b5e080014dc4bfa.mockapi.io/todos";$(()=>{new TodosController($(".container"))});class TodosController{constructor(){this.listView=new TodoListView({onToggle:this.toggleTodo.bind(this),onDelete:this.deleteTodo.bind(this)}),this.formView=new TodoFormView({onAdd:this.addTodo.bind(this)}),$(".container").append(this.listView.$el).append(this.formView.$el),this.todosCollection=new TodosCollection(TODOS_URL),this.todosCollection.fetchTodos().then(()=>this.renderList())}renderList(){this.listView.render(this.todosCollection.list)}toggleTodo(t){this.todosCollection.toggle(t),this.renderList()}deleteTodo(t){this.todosCollection.deleteTodo(t),this.renderList()}addTodo(t){this.todosCollection.addTodo(t).then(()=>this.renderList())}}class TodosCollection{constructor(t){this._url=t,this.list=[],this.item=null}fetchTodos(){return fetch(this._url).then(t=>t.json()).then(t=>this.setData(t))}setData(t){this.list=t}toggle(i){const t=this.list.find(t=>t.id==i);return t.isDone=!t.isDone,fetch(`${this._url}/${i}`,{method:"PUT",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}).then(t=>t.json())}deleteTodo(i){return this.list=this.list.filter(t=>t.id!=i),fetch(`${this._url}/${i}`,{method:"DELETE"})}addTodo(t){if(t.isDone=!1,""!=t.title)return fetch(`${this._url}`,{method:"POST",body:JSON.stringify(t),headers:{"Content-type":"application/json"}}).then(t=>t.json()).then(t=>this.list.push(t))}}class TodoFormView{constructor(t){this._config=t,this.$el=this.initView(),this.$taskInput=this.$el.find("#newTaskInput")}initView(){return $(`<form id="addTaskForm">
                   <div class="row">
                     <div class="ten columns">
                     <input type="text"
                            id="newTaskInput"/>
                     </div>
                     <div class="two columns">
                     <input class="add-btn" type="submit" value="Add"/>
                     </div>
                    </form>`).on("submit",t=>this.onAddBtnClick(t))}onAddBtnClick(t){t.preventDefault();t={title:this.$taskInput.val()};this._config.onAdd(t),this.resetForm()}resetForm(){this.$taskInput.val("")}}const DELETE_BTN_SELECTOR=".delete-btn",ITEM_SELECTOR=".task-item";class TodoListView{constructor(t){this._config=t,this.$el=this.initView()}initView(){return $('<div id="taskList class="task-list"></div>').on("click",ITEM_SELECTOR,this.onClickTodo.bind(this)).on("click",DELETE_BTN_SELECTOR,this.onListClick.bind(this))}onListClick(t){t.stopPropagation();t=this.getElementId($(t.target));this._config.onDelete(t)}onClickTodo(t){t=this.getElementId($(t.target));this._config.onToggle(t)}render(t){this.$el.html(t.map(this.getTodoTemplate).join(""))}getTodoTemplate(t){return`<div class="task-item ${t.isDone?"done":""}" data-todo-id="${t.id}">
     ${t.title}<span class="delete-btn">X</span></div>`}getElementId(t){return t.closest(ITEM_SELECTOR).data("todoId")}}